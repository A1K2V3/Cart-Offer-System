{"name": "TC_003: Ineligible user segment", "status": "skipped", "statusDetails": {"message": "XFAIL Segment mismatch — no offer applied\n\n_pytest.outcomes.XFailed: Segment mismatch — no offer applied", "trace": "cart_offer = <library.services.cart_offer_services.CartOfferServices object at 0x7646dc50b5c0>\nmockserver = <library.mockserver.MockServer object at 0x7646dc3545c0>, title = 'TC_003: Ineligible user segment', cart_value = 200\nuser_id = 1, restaurant_id = 1, segment = 'unknown', offer_type = 'FLATX', offer_value = 10, allowed_segments = ['p1']\nexpected_cart_value = 200, expected_status = 200, xfail_reason = 'Segment mismatch — no offer applied'\n\n    @allure.feature(\"Cart Offer - Business Rule Validation\")\n    @pytest.mark.validation\n    @pytest.mark.parametrize(\n        \"title, cart_value, user_id, restaurant_id, segment, offer_type, offer_value, allowed_segments, expected_cart_value, expected_status, xfail_reason\",\n        [\n            (\"TC_001: Invalid data type for cart_value\", \"abc\", 1, 1, None, None, None, None, None, 400, None),\n            (\"TC_002: Negative cart value\", -100, 1, 1, None, None, None, None, None, 400, None),\n            (\"TC_003: Ineligible user segment\", 200, 1, 1, \"unknown\", \"FLATX\", 10, [\"p1\"], 200, 200, \"Segment mismatch — no offer applied\"),\n        ]\n    )\n    def test_cart_offer_business_rules(\n        cart_offer: CartOfferServices,\n        mockserver: MockServer,\n        title: str,\n        cart_value,\n        user_id,\n        restaurant_id,\n        segment,\n        offer_type,\n        offer_value,\n        allowed_segments,\n        expected_cart_value,\n        expected_status,\n        xfail_reason: str,\n    ):\n        allure.dynamic.title(title)\n    \n        if xfail_reason:\n>           pytest.xfail(reason=xfail_reason)\nE           _pytest.outcomes.XFailed: Segment mismatch — no offer applied\n\ntests/test_business_logic_validation.py:35: XFailed"}, "parameters": [{"name": "title", "value": "'TC_003: Ineligible user segment'"}, {"name": "cart_value", "value": "200"}, {"name": "user_id", "value": "1"}, {"name": "restaurant_id", "value": "1"}, {"name": "segment", "value": "'unknown'"}, {"name": "offer_type", "value": "'FLATX'"}, {"name": "offer_value", "value": "10"}, {"name": "allowed_segments", "value": "['p1']"}, {"name": "expected_cart_value", "value": "200"}, {"name": "expected_status", "value": "200"}, {"name": "xfail_reason", "value": "'Segment mismatch — no offer applied'"}], "start": 1752150717917, "stop": 1752150717917, "uuid": "42828ef5-effc-4667-9ef6-92cf65b1674b", "historyId": "dbcce4259dbb25d6d9e4f8a90f9d1bc7", "testCaseId": "efbfa2d171d522eab5441969d6379088", "fullName": "tests.test_business_logic_validation#test_cart_offer_business_rules", "labels": [{"name": "feature", "value": "Cart Offer - Business Rule Validation"}, {"name": "tag", "value": "validation"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_business_logic_validation"}, {"name": "host", "value": "LAPTOP-AEEGI4HU"}, {"name": "thread", "value": "171954-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_business_logic_validation"}]}