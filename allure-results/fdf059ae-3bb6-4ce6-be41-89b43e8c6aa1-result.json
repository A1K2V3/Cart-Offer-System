{"name": "TC_009: Decimal cart value with FLATX", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 189.99, got 189\nassert 189 == 189.99\n +  where 189 = round(189, 2)\n +  and   189.99 = round(189.99, 2)", "trace": "cart_offer = <library.services.cart_offer_services.CartOfferServices object at 0x7b18be89c410>\nmockserver = <library.mockserver.MockServer object at 0x7b18be6e05f0>, title = 'TC_009: Decimal cart value with FLATX', user_id = 1\nsegment = 'p1', offer_type = 'FLATX', offer_value = 10, cart_value = 199.99, expected_cart_value = 189.99, xfail_reason = None\n\n    @allure.feature(\"Cart Offer - Flat Discount Logic (FLATX and FLAT%)\")\n    @pytest.mark.cart\n    @pytest.mark.parametrize(\n        \"title, user_id, segment, offer_type, offer_value, cart_value, expected_cart_value, xfail_reason\",\n        [\n            (\"TC_001: FLATX offer applied correctly\", 1, \"p1\", \"FLATX\", 10, 200, 190, None),\n            (\"TC_002: FLATX offer with high discount (but valid)\", 1, \"p1\", \"FLATX\", 40, 200, 160, None),\n            (\"TC_003: FLAT% offer applied correctly\", 2, \"p2\", \"FLAT%\", 10, 200, 180, None),\n            (\"TC_004: FLATX equals cart value\", 1, \"p1\", \"FLATX\", 100, 100, 0, None),\n            (\"TC_005: FLATX exceeds cart value\", 1, \"p1\", \"FLATX\", 200, 50, 0, None),\n            (\"TC_006: FLAT% with 100% discount\", 3, \"p3\", \"FLAT%\", 100, 200, 0, None),\n            (\"TC_007: FLAT% with >100% discount\", 3, \"p3\", \"FLAT%\", 150, 200, 0, None),\n            (\"TC_008: Zero cart value with FLATX\", 2, \"p2\", \"FLATX\", 10, 0, 0, None),\n            (\"TC_009: Decimal cart value with FLATX\", 1, \"p1\", \"FLATX\", 10, 199.99, 189.99, None),\n            (\"TC_010: High cart value with FLAT% offer\", 1, \"p1\", \"FLAT%\", 50, 9999, 4999.5, None),\n        ]\n    )\n    def test_cart_offer_flat_cases(\n        cart_offer: CartOfferServices,\n        mockserver: MockServer,\n        title: str,\n        user_id: int,\n        segment: str,\n        offer_type: str,\n        offer_value: float,\n        cart_value: float,\n        expected_cart_value: float,\n        xfail_reason: str\n    ):\n        allure.dynamic.title(title)\n    \n        if xfail_reason:\n            pytest.xfail(reason=xfail_reason)\n    \n        mockserver.set_user_segment_mock(user_id=user_id, segment=segment)\n    \n        cart_offer.create_offer(\n            restaurant_id=1,\n            offer_type=offer_type,\n            offer_value=offer_value,\n            customer_segment=[segment]\n        )\n    \n        response = cart_offer.apply_offer(\n            cart_value=cart_value,\n            user_id=user_id,\n            restaurant_id=1\n        )\n    \n        actual_cart_value = response.json()[\"cart_value\"]\n    \n        if isinstance(expected_cart_value, float):\n>           assert round(actual_cart_value, 2) == round(expected_cart_value, 2), f\"Expected {expected_cart_value}, got {actual_cart_value}\"\nE           AssertionError: Expected 189.99, got 189\nE           assert 189 == 189.99\nE            +  where 189 = round(189, 2)\nE            +  and   189.99 = round(189.99, 2)\n\ntests/test_discount_logic.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "efdaaa24-c800-4090-b5d8-a7a3e0af9f56-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'TC_009: Decimal cart value with FLATX'"}, {"name": "user_id", "value": "1"}, {"name": "segment", "value": "'p1'"}, {"name": "offer_type", "value": "'FLATX'"}, {"name": "offer_value", "value": "10"}, {"name": "cart_value", "value": "199.99"}, {"name": "expected_cart_value", "value": "189.99"}, {"name": "xfail_reason", "value": "None"}], "start": 1752151007809, "stop": 1752151007845, "uuid": "76e11b6d-9bf6-49bc-902c-5fa7e3b9aa33", "historyId": "344da7757490665d244c8521db1ffa4f", "testCaseId": "9170716926feaeb6390f1a985ad51cb2", "fullName": "tests.test_discount_logic#test_cart_offer_flat_cases", "labels": [{"name": "feature", "value": "Cart Offer - Flat Discount Logic (FLATX and FLAT%)"}, {"name": "tag", "value": "cart"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_discount_logic"}, {"name": "host", "value": "LAPTOP-AEEGI4HU"}, {"name": "thread", "value": "175289-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_discount_logic"}]}